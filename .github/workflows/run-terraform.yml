# This is a workflow to see what will be affected with upcoming changes

name: Terraform

# Controls when the action will run. Triggers the workflow on pull request
# events but only for the main branch
on:
  pull_request:
    branches: [ main ]
    paths:
      - '.github/workflows/run-terraform.yml'
      - 'infrastructure/**'
      - 'src/**'
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/run-terraform.yml'
      - 'infrastructure/**'
      - 'src/**'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "plan"
  plan:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    outputs:
      dev: ${{ steps.set_output.outputs.dev_exitcode }}
      prod: ${{ steps.set_output.outputs.prod_exitcode }}
    strategy:
      fail-fast: false
      matrix:
        env: [dev, prod]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v4
    - uses: hashicorp/setup-terraform@v3
    - uses: actions/setup-python@v5
      with:
        python-version: '3.13' 
  

    # Set AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.TERRAFORM_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.TERRAFORM_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1

    # Runs a `terraform plan` command using the runners shell
    - name: Run terraform plan ${{ matrix.env }}
      id: tf_plan
      run: |
        cd ./infrastructure/${{ matrix.env }}
        terraform version
        terraform init
        terraform plan -detailed-exitcode
    
    - name: Set output for dev and prod
      id: set_output
      run: |
        echo "${{ matrix.env }}_exitcode=${{ steps.tf_plan.outputs.exitcode }}" >> "$GITHUB_OUTPUT"

  apply:
    needs: plan
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        env: [dev, prod]
    environment: ${{ matrix.env }}
    if: github.event_name == 'push' && needs.plan.outputs['prod'] == '2'
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.TERRAFORM_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.TERRAFORM_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      - name: Run terraform apply ${{ matrix.env }}
        run: |
          cd ./infrastructure/${{ matrix.env }}
          terraform version
          terraform init
          terraform apply -auto-approve